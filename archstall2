#!/bin/bash

#
# Archstall2 v0.2 Arch Linux installer made by PowerMan2206.
# Meant to be run through the other script, don't run on it's own
#

# set the variables
boot=`cat /bootmode`
disk=`cat /diskthing`

# select timezone region
echo ""
ls /usr/share/zoneinfo
echo ""
read -p "Select your region: " region
echo ""

# same but for city
echo "Select your city..."
echo ""
ls /usr/share/zoneinfo/$region
echo ""
read -p "Select your city: " city
echo ""

# actually set the timezone
echo "Setting the timezone..."
ln -sf /usr/share/zoneinfo/$region/$city /etc/localtime
echo ""

# somethingsomething time
echo "Generating /etc/adjtime..."
hwclock --systohc
echo ""

# locale stuff (???)
echo "Setting the locale..."
sed -i 's/#en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
locale-gen
echo "LANG=en_US.UTF-8" > /etc/locale.conf
echo ""

read -p "Type in the hostname [localhost] : " hostname
if [[ $hostname == "" ]]; then
	hostname="localhost"
fi
echo "Setting the hostname..."
echo $hostname > /etc/hostname
echo ""

echo "Setting the root password..."
passwd
echo ""

read -p "Do you want to add a user? [y] " user
if [[ $user == "y" || $user == "" ]]; then
	read -p "What do you want to name your user? [user] " username
	if [[ $username == "" ]]; then
		username="user"
	fi

	# adding user to sudo group and making the sudo group have sudo stuff
	groupadd sudo
	useradd -m "$username" -G sudo
	sed -i 's/# %sudo/%sudo/' /etc/sudoers
	
	echo "Setting the user password..."
	passwd $username
fi

clear

# network setup
read -p "Want to use systemd-networkd? [y] " network
echo ""

if [[ $network == "y" || $network == "" ]]; then
	# takes the long `ip a` output and shortens it down to just the interfaces
	ip a | grep "<" | cut -d':' -f2 | cut -c 2-
	echo ""
	read -p "Select your interface: " interface

	systemctl enable systemd-networkd systemd-resolved
	echo "[Match]" >> /etc/systemd/network/20-wired.network
	echo "Name=$interface" >> /etc/systemd/network/20-wired.network
	echo "[Network]" >> /etc/systemd/network/20-wired.network
	echo "DHCP=yes" >> /etc/systemd/network/20-wired.network
fi

# swapfile
read -p "Want a Swapfile? [y] " swap
echo ""

if [[ $swap == "y" || $swap == "" ]]; then
	read -p "How big should the Swapfile be (in MiB)? [1024] " swapsize

	# if no input is given, default to 1024
	if [[ $swapsize == "" ]]; then
		swapsize=1024
	fi

	echo ""
	echo "Making Swap..."
	dd if=/dev/zero of=/swapfile bs=1M count=$swapsize status=progress
	chmod 600 /swapfile
	mkswap /swapfile
	swapon /swapfile
	echo "/swapfile none swap defaults 0 0" >> /etc/fstab
	echo ""
fi

# read CPU vendor (for microcode)
read -p "Do you have an Intel or AMD CPU? (lowercase pls) " cpu
echo ""
# bootloader
echo "Installing GRUB..."
echo ""

# different installation methods based on the boot mode
if [[ $boot == "uefi" ]]; then
	pacman -S grub efibootmgr $cpu-ucode --noconfirm
	echo ""
	grub-install --target=x86_64-efi --efi-directory=/efi --bootloader-id=GRUB
	echo ""
	grub-mkconfig -o /boot/grub/grub.cfg
		
elif [[ $boot == "bios" ]]; then
	pacman -S grub $cpu-ucode --noconfirm
	echo ""
	grub-install /dev/$disk
	echo ""
	grub-mkconfig -o /boot/grub/grub.cfg
	
fi

exit
